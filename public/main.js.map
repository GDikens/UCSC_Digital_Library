{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/content/content.component.css","webpack:///./src/app/components/content/content.component.html","webpack:///./src/app/components/content/content.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home-navbar/home-navbar.component.css","webpack:///./src/app/components/home-navbar/home-navbar.component.html","webpack:///./src/app/components/home-navbar/home-navbar.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/ngsnotify.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n<ng-snotify class=\\\"{{style}}\\\"></ng-snotify>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeNavbarComponent } from './components/home-navbar/home-navbar.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ContentComponent } from './components/content/content.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { SnotifyModule, SnotifyService, ToastDefaults } from 'ng-snotify';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst appRoutes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    DashboardComponent,\n    HomeNavbarComponent,\n    SidebarComponent,\n    ContentComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    SnotifyModule\n  ],\n  providers: [ValidateService, AuthService, { provide: 'SnotifyToastConfig', useValue: ToastDefaults}, SnotifyService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <app-sidebar></app-sidebar>\\r\\n    <app-content></app-content>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo01\\\" aria-controls=\\\"navbarTogglerDemo01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo01\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">UCSC Digital Library</a>\\n      <!-- <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Disabled</a>\\n        </li>\\n      </ul> -->\\n      <ul class=\\\"navbar-nav flex-row ml-md-auto d-none d-md-flex\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item nav-link\\\">{{ user.username }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['/login']\\\">LogIn</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n          </li>\\n      </ul>\\n    </div>\\n</nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { NgsnotifyService } from '../../services/ngsnotify.service';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-home-navbar',\n  templateUrl: './home-navbar.component.html',\n  styleUrls: ['./home-navbar.component.css']\n})\nexport class HomeNavbarComponent implements OnInit {\n  User:Object;\n\n  constructor(\n    private ngsnotifyService:NgsnotifyService,\n    private authService:AuthService,\n    private router:Router,\n    //private jwtHelper: JwtHelperService\n  ) { }\n\n  ngOnInit() {\n    this.User = JSON.parse(localStorage.getItem('user'));\n    console.log(this.User);\n    //console.log(this.jwtHelper.isTokenExpired());\n  }\n\n}\n","module.exports = \".content {\\r\\n    /* background-image: url('../../../../../public/home_bg.jpg'); */\\r\\n    background-repeat:none; \\r\\n}\"","module.exports = \"<app-home-navbar></app-home-navbar>\\n\\n<div class=\\\"jumbotron text-center\\\">\\n    <h1 class=\\\"display-4\\\">Welcome to UCSC Digital Library!</h1>\\n    <p class=\\\"lead\\\">\\n        This is the online system for the undergraduate students of the UCSC to reserve books and search for books.</p>\\n    <hr class=\\\"my-4\\\">\\n    <p>\\n        We provide you many services along with book reservation service.\\n    </p>\\n    <a class=\\\"btn btn-info btn-lg\\\" href=\\\"#\\\" role=\\\"button\\\">Learn more</a>\\n</div>\\n\\n<div class=\\\"content\\\">\\n    <div class=\\\"container\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header bg-primary\\\">\\n                    About Us\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p class=\\\"card-text\\\">\\n                        UCSC Digital Library (UCSC-DL) is an online e-Repository which mainly contains published materials of UCSC students and staff, namely undergraduate, masters and research level dissertations, thesis and published research papers. In addition, UCSC-DL contains electronic materials shared among internal staff. Only authorized personnel will be allowed to access library materials but selected materials as listed here, could be accessed without login into the system. This repository is updated regularly, and new works are added to collections on a continuous basis.\\n                    </p>\\n                </div>\\n            </div>\\n            <br>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header bg-primary\\\">\\n                    Categories in UCSC Digital Library\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p class=\\\"card-text\\\">\\n                        <ul>\\n                            <li>Archive Books</li>\\n                            <li>Bachelor of Computer Science</li>\\n                            <li>Bachelor of ICT</li> \\t\\n                            <li>Bachelor of Information Technology</li>\\n                            <li>Bulk upload</li> \\t\\n                            <li>Computer Science Masters</li>\\n                            <li>Conference proceedings</li> \\t\\n                            <li>eBooks</li>\\n                            <li>Infomation Security Masters</li> \\t\\n                            <li>Infomation Technology Masters</li>\\n                            <li>Journals and Magazines</li> \\t\\n                            <li>Personal Academic Collection</li>\\n                            <li>Ph.D and M.Phil</li> \\t\\n                            <li>Research Articles</li>\\n                        </ul>\\n                    \\n                </div>\\n            </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-home-navbar></app-home-navbar>\\n\\n<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n        <h1 class=\\\"display-4\\\">User Login</h1>\\n        <p class=\\\"lead\\\">Log in to experience our services</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"content\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\"></div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <form (submit)=\\\"onLoginSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"userInputUsername\\\">Username</label>\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" id=\\\"userInputUsername\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"userInputPassword\\\">Password</label>\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" id=\\\"userInputPassword\\\">\\n                            </div>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">LogIn</button>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { NgsnotifyService } from '../../services/ngsnotify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private ngsnotifyService:NgsnotifyService,\n    private validateService: ValidateService,\n    private authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  @HostListener('onLoginSubmit')\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      console.log(data.msg);\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.ngsnotifyService.onSuccess('You are logged in!','Success');\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.ngsnotifyService.onError(data.msg,'Error');\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo01\\\" aria-controls=\\\"navbarTogglerDemo01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div *ngIf=\\\"User\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo01\\\">\\n      <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n          <a class=\\\"nav-item nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n          <a class=\\\"nav-item nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"navbar-nav flex-row ml-md-auto d-none d-md-flex\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-item nav-link\\\">{{ User.username }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-item nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">LogOut</a>\\n          </li>\\n      </ul>\\n    </div>\\n</nav>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { NgsnotifyService } from '../../services/ngsnotify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  User:Object;\n\n  constructor(\n    private ngsnotifyService:NgsnotifyService,\n    private authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.User = JSON.parse(localStorage.getItem('user'));\n    console.log(this.User);\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.ngsnotifyService.onSuccess('You are logged out','Success');\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","module.exports = \".profile {\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\r\\n    max-width: 500px;\\r\\n    margin: auto;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n.title {\\r\\n    color: grey;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n\\r\\nbutton {\\r\\n    border: none;\\r\\n    outline: 0;\\r\\n    display: inline-block;\\r\\n    padding: 8px;\\r\\n    color: white;\\r\\n    background-color: #000;\\r\\n    text-align: center;\\r\\n    cursor: pointer;\\r\\n    width: 100%;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n\\r\\na {\\r\\n    text-decoration: none;\\r\\n    font-size: 22px;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n\\r\\nbutton:hover, a:hover {\\r\\n    opacity: 0.7;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<br>\\r\\n<div *ngIf=\\\"User\\\" class=\\\"card profile\\\">\\r\\n    <h1>{{ User.name }}</h1>\\r\\n    <p class=\\\"title\\\">{{ User.email }}</p>\\r\\n    <p>{{ User.username }}</p>\\r\\n    <p><button>Edit Profile</button></p>\\r\\n</div>\\r\\n<br><br>\\r\\n\\r\\n<div class=\\\"container text-center\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Fines due\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Here are you fines</h5>\\r\\n                    <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\r\\n                    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Books to return\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">The books you should return</h5>\\r\\n                    <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\r\\n                    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    My Progress\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Your insights in a nutshell</h5>\\r\\n                    <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\r\\n                    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    \"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { NgsnotifyService } from '../../services/ngsnotify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  User:Object;\n\n  constructor(\n    private ngsnotifyService:NgsnotifyService,\n    private validateService: ValidateService,\n    private authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.User = profile.user;\n    },\n    err => {\n      console.log(err)\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-home-navbar></app-home-navbar>\\n\\n<div class=\\\"jumbotron jumbotron-fluid\\\">\\n        <div class=\\\"container\\\">\\n          <h1 class=\\\"display-4\\\">User Registration</h1>\\n          <p class=\\\"lead\\\">Submit this form to be a member of UCSC Digital Library</p>\\n        </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n    <!-- <ng-flash-message></ng-flash-message> -->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2\\\"></div>\\n        <div class=\\\"col-md-8\\\">\\n            <form (submit)=\\\"onRegisterSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nameFormControlInput\\\">Name</label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"nameFormControlInput\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"usernameFormControlInput\\\">Username</label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" id=\\\"usernameFormControlInput\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"emailFormControlInput\\\">Email address</label>\\n                    <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emailFormControlInput\\\" placeholder=\\\"name@example.com\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"passwordFormControlInput\\\">Password</label>\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordFormControlInput\\\">\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"submit\\\">Submit</button>\\n            </form>\\n        </div>\\n        <div class=\\\"col-md-2\\\"></div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { NgsnotifyService } from '../../services/ngsnotify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService, \n    private ngsnotifyService:NgsnotifyService,\n    private authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    // Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.ngsnotifyService.onWarning('Please fill in all fields','Warning');\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.ngsnotifyService.onWarning('Please use a valid email','Warning');\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success){\n        this.ngsnotifyService.onSuccess('User registered successfully!','Success');\n        this.router.navigate(['/register']);\n      } else {\n        this.ngsnotifyService.onError('Something went wrong','Error');\n        this.router.navigate(['/register']);\n      }\n    });\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"w3-sidebar w3-bar-block w3-center w3-large w3-border w3-light-grey\\\">\\n    <a href=\\\"#\\\" class=\\\"w3-bar-item w3-button w3-padding-16\\\">Search books</a>\\n    <a href=\\\"#\\\" class=\\\"w3-bar-item w3-button w3-padding-16\\\">Reserve books</a>\\n    <a href=\\\"#\\\" class=\\\"w3-bar-item w3-button w3-padding-16\\\">Fines</a>\\n</div> \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(\r\n        private authService:AuthService,\r\n        private router:Router\r\n    ){}\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(\n    private http:Http\n    //private jwtHelper:JwtHelperService\n  ) { }\n\n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers}).pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers}).pipe(map(res => res.json()));\n  }\n\n  getProfile(){\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get('http://localhost:3000/users/profile', {headers: headers}).pipe(map(res => res.json()));\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loggedIn(){\n    if(this.authToken){\n      return this.user;\n    } else {\n      return false;\n    }\n    // return this.jwtHelper.isTokenExpired();\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SnotifyService, SnotifyPosition, SnotifyToastConfig} from 'ng-snotify';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsnotifyService {\n  style = 'material';\n  timeout = 3000;\n  position: SnotifyPosition = SnotifyPosition.rightBottom;\n  progressBar = true;\n  closeClick = true;\n  newTop = true;\n  backdrop = -1;\n  dockMax = 8;\n  blockMax = 6;\n  pauseHover = true;\n  titleMaxLength = 15;\n  bodyMaxLength = 80;\n\n  constructor(private snotifyService:SnotifyService) { }\n\n  getConfig(): SnotifyToastConfig {\n    this.snotifyService.setDefaults({\n      global: {\n        newOnTop: this.newTop,\n        maxAtPosition: this.blockMax,\n        maxOnScreen: this.dockMax,\n      }\n    });\n    return {\n      bodyMaxLength: this.bodyMaxLength,\n      titleMaxLength: this.titleMaxLength,\n      backdrop: this.backdrop,\n      position: this.position,\n      timeout: this.timeout,\n      showProgressBar: this.progressBar,\n      closeOnClick: this.closeClick,\n      pauseOnHover: this.pauseHover\n    };\n  }\n\n  onSuccess(body, title){\n    this.snotifyService.success(body, title, this.getConfig());\n  }\n\n  onError(body, title) {\n    this.snotifyService.error(body, title, this.getConfig());\n  }\n\n  onInfo(body, title) {\n    this.snotifyService.info(body, title, this.getConfig());\n  }\n\n  onWarning(body, title) {\n    this.snotifyService.warning(body, title, this.getConfig());\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}